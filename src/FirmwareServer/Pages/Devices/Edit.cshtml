@page "{id:int}"
@model FirmwareServer.Pages.Devices.EditModel
@{
    ViewData["Title"] = "Edit device";
}

<form method="post">
    <page-header>
        <div class="align-self-end ml-auto">
            <button type="submit" class="btn btn-success mr-0">Save</button>
            <a asp-page="./Index" class="btn btn-secondary ">Cancel</a>
        </div>
    </page-header>

    <partial name="_StatusMessage" for="StatusMessage" />

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Input.Name"></label>
                <input asp-for="Input.Name" class="form-control" />
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Input.ChipType"></label>
                <input asp-for="Input.ChipType" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Input.DeviceTypeId"></label>
                <select asp-for="Input.DeviceTypeId" class="form-control" data-bind="options: availableDeviceTypes,
                        optionsText: 'name',
                        optionsValue: 'id',
                        value: selectedDeviceType,
                        optionsCaption: 'Choose …'">
                </select>
                <span asp-validation-for="Input.DeviceTypeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Input.ApplicationId"></label>
                <select asp-for="Input.ApplicationId" class="form-control" data-bind="options: availableApplications,
                        optionsText: 'name',
                        optionsValue: 'id',
                        value: selectedApplication,
                        optionsCaption: 'Choose …'">
                </select>
                <span asp-validation-for="Input.ApplicationId" class="text-danger"></span>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        var DeviceViewModel = function () {
            var self = this;

            self.availableDeviceTypes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.DeviceTypesWithApplications));

            self.availableApplications = ko.pureComputed(function () {
                var selected = ko.utils.arrayFirst(self.availableDeviceTypes, function (item) {
                    return item.id == self.selectedDeviceType();
                });

                if (selected === null)
                    return [];

                return selected.applications;
            });

            self.selectedDeviceType = ko.observable(@Model.Input.DeviceTypeId);

            self.selectedApplication = ko.observable(@Model.Input.ApplicationId);
        };

        var vm = new DeviceViewModel();
        ko.applyBindings(vm);
    </script>
}